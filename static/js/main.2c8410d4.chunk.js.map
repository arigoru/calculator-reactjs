{"version":3,"sources":["components/calculator/button.jsx","components/calculator/resultDisplay.jsx","components/calculator/operationsDisplay.jsx","components/calculator.jsx","App.js","serviceWorker.js","index.js"],"names":["Button","state","_this2","this","react_default","a","createElement","tabIndex","onClick","event","currentTarget","blur","props","handler","value","type","id","className","concat","subClass","children","Component","ResultDisplay","OperationsDisplay","operationString","showingResult","cycleOperation","list","operations","i","length","indexOf","operation","calculate","splice","element","nextElement","operand","Calculator","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","addOperation","newOpers","newNum","parseFloat","display","Number","isNaN","push","setState","hadDecimal","clearEverything","addToDisplay","newDisplay","replace","showResult","result","buttonPressed","listOrigin","toConsumableArray","calculateList","renderOperations","reduce","prev","curr","renderButtons","buttons","map","e","calculator_button","key","keyPressHandler","calculatorReference","current","focus","React","createRef","document","addEventListener","removeEventListener","ref","resultDisplay","operationsDisplay","App","calculator","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"8OAqBeA,6MAlBbC,MAAQ,2EACC,IAAAC,EAAAC,KACP,OACEC,EAAAC,EAAAC,cAAA,UACEC,SAAS,KACTC,QAAS,SAAAC,GACPA,EAAMC,cAAcC,OACpBT,EAAKU,MAAMC,QAAQX,EAAKU,MAAME,MAAOZ,EAAKU,MAAMG,OAElDC,GAAIb,KAAKS,MAAMI,GACfC,UAAS,OAAAC,OAASf,KAAKS,MAAMO,SAApB,YAERhB,KAAKS,MAAMQ,iBAbCC,aCWNC,6MAVbrB,MAAQ,2EAEN,OACEG,EAAAC,EAAAC,cAAA,OAAKW,UAAU,mBAAmBD,GAAG,WAClCb,KAAKS,MAAMQ,iBALQC,aCWbE,6MAVbtB,MAAQ,2EAEN,OACEG,EAAAC,EAAAC,cAAA,OAAKU,GAAG,oBAAoBC,UAAU,uBACnCd,KAAKS,MAAMQ,iBALYC,aCG5BG,EAAkB,CACpB,GACA,IACA,IACA,IACA,IACA,KAEEC,GAAgB,EAEpB,SAASC,EAAeC,EAAMC,GAE5B,IADA,IAAIC,EAAI,EACDA,GAAKF,EAAKG,OAAS,GACpBF,EAAWG,QAAQJ,EAAKE,GAAGG,YAAc,GAC3CL,EAAKE,EAAI,GAAKI,EAAUN,EAAKE,GAAIF,EAAKE,EAAI,IAC1CF,EAAKO,OAAOL,EAAG,IAEfA,IAGJ,OAAOF,EAWT,SAASM,EAAUE,EAASC,GAC1B,OAAQD,EAAQH,WACd,KAAK,EACH,MAAO,CACLK,QAASF,EAAQE,QAAUD,EAAYC,QACvCL,UAAWI,EAAYJ,WAE3B,KAAK,EACH,MAAO,CACLK,QAASF,EAAQE,QAAUD,EAAYC,QACvCL,UAAWI,EAAYJ,WAE3B,KAAK,EACH,MAAO,CACLK,QAASF,EAAQE,QAAUD,EAAYC,QACvCL,UAAWI,EAAYJ,WAE3B,KAAK,EACH,MAAO,CACLK,QAASF,EAAQE,QAAUD,EAAYC,QACvCL,UAAWI,EAAYJ,WAE3B,QACE,OAAO,OAoNEM,cA/Mb,SAAAA,EAAY1B,GAAO,IAAA2B,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAArC,KAAAmC,IACjBC,EAAAC,OAAAE,EAAA,EAAAF,CAAArC,KAAAqC,OAAAG,EAAA,EAAAH,CAAAF,GAAAM,KAAAzC,KAAMS,KAsCRiC,aAAe,SAAAb,GACb,IAAIc,EAAWP,EAAKtC,MAAM2B,WACtBmB,EAASC,WAAWT,EAAKtC,MAAMgD,SAC/BC,OAAOC,MAAMJ,GACfD,EAASA,EAAShB,OAAS,GAAGE,UAAYA,EAE1Cc,EAASM,KAAK,CACZf,QAASU,EACTf,UAAWA,IAGfO,EAAKc,SAAS,CACZzB,WAAYkB,EACZG,QAASzB,EAAgBQ,GACzBsB,YAAY,KArDGf,EAyDnBgB,gBAAkB,WAChBhB,EAAKc,SAAS,CACZJ,QAAS,IACTrB,WAAY,GACZ0B,YAAY,IAEd7B,GAAgB,GA/DCc,EAkEnBiB,aAAe,SAAA1C,GACb,IAAI2C,EAAalB,EAAKtC,MAAMgD,QAAUnC,EAEhB,OADtB2C,EAAaA,EAAWC,QAAQ,cAAc,KAC/B,KAAYD,EAAa,MACxCA,EAAaA,EAAWC,QAAQ,aAAc,MAC9CnB,EAAKc,SAAS,CACZJ,QAASQ,KAxEMlB,EA4EnBoB,WAAa,SAAAC,GACXrB,EAAKc,SAAS,CACZJ,QAASW,EACTN,YAAY,IAEd7B,GAAgB,GAjFCc,EAoFnBsB,cAAgB,SAAC/C,EAAOC,GACtB,GAAIU,EAAe,CACjBA,GAAgB,EAChB,IAAIgC,EAAsB,cAAT1C,EAAuBwB,EAAKtC,MAAMgD,QAAU,IAC7DV,EAAKc,SACH,CACEJ,QAASQ,EACT7B,WAAY,GACZ0B,YAAY,GAEd,kBAAMf,EAAKsB,cAAc/C,EAAOC,UAGlC,OAAQA,GACN,IAAK,WACW,MAAVD,EAAeyB,EAAKgB,kBACdhB,EAAKtC,MAAMqD,YAAwB,MAAVxC,IACjCyB,EAAKiB,aAAa,KAClBjB,EAAKc,SAAS,CACZC,YAAY,KAGhB,MACF,IAAK,YACW,IAAVxC,GACFyB,EAAKM,aAAa,GAClBN,EAAKoB,WAlJjB,SAAuBG,GACrB,IAAInC,EAAIa,OAAAuB,EAAA,EAAAvB,CAAOsB,GAIf,OAHAnC,EAAOD,EAAeC,EAAM,CAAC,IAC7BA,EAAOD,EAAeC,EAAM,CAAC,KAC7BA,EAAOD,EAAeC,EAAM,CAAC,EAAG,KACpB,GAAGU,QA6IW2B,CAAczB,EAAKtC,MAAM2B,cACpCW,EAAKM,aAAa/B,GACzB,MACF,IAAK,SACHyB,EAAKiB,aAAa1C,KAlHPyB,EAiInB0B,iBAAmB,WACjB,OAAO1B,EAAKtC,MAAM2B,WAAWsC,OAAO,SAACC,EAAMC,GACzC,OAAOD,EAAOC,EAAK/B,QAAZ,IAAAnB,OAA0BM,EAAgB4C,EAAKpC,WAA/C,MACN,KApIcO,EAuInB8B,cAAgB,WACd,OAAO9B,EAAKtC,MAAMqE,QAAQC,IAAI,SAAAC,GAAC,OAC7BpE,EAAAC,EAAAC,cAACmE,EAAD,CACE1D,KAAMyD,EAAEzD,KACRF,QAAS0B,EAAKsB,cACd7C,GAAIwD,EAAExD,GACNG,SAAUqD,EAAErD,SACZuD,IAAKF,EAAExD,GACPF,MAAO0D,EAAE1D,OAEG,cAAX0D,EAAEzD,KAAuBS,EAAgBgD,EAAE1D,OAAS0D,EAAE1D,UAjJ1CyB,EAsJnBoC,gBAAkB,SAAAH,GAEhB,OADAjC,EAAKqC,oBAAoBC,QAAQC,QACzBN,EAAEE,KACR,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACHnC,EAAKsB,cAAcX,OAAOsB,EAAEE,KAAM,UAClC,MACF,IAAK,IACHnC,EAAKsB,cAAcW,EAAEE,IAAK,YAC1B,MACF,IAAK,IACL,IAAK,IACHnC,EAAKsB,cAAc,IAAK,YACxB,MACF,IAAK,QACL,IAAK,IACHtB,EAAKsB,cAAc,EAAG,aACtB,MACF,IAAK,IACHtB,EAAKsB,cAAc,EAAG,aACtB,MACF,IAAK,IACHtB,EAAKsB,cAAc,EAAG,aACtB,MACF,IAAK,IACHtB,EAAKsB,cAAc,EAAG,aACtB,MACF,IAAK,IACHtB,EAAKsB,cAAc,EAAG,eAxL1BtB,EAAKqC,oBAAsBG,IAAMC,YACjCzC,EAAKtC,MAAQ,CACXgD,QAAS,IACTK,YAAY,EACZ1B,WAAY,GACZ0C,QAAS,CACP,CAAEtD,GAAI,OAAQD,KAAM,SAAUI,SAAU,WAAYL,MAAO,GAC3D,CAAEE,GAAI,MAAOD,KAAM,SAAUI,SAAU,WAAYL,MAAO,GAC1D,CAAEE,GAAI,MAAOD,KAAM,SAAUI,SAAU,WAAYL,MAAO,GAC1D,CAAEE,GAAI,QAASD,KAAM,SAAUI,SAAU,WAAYL,MAAO,GAC5D,CAAEE,GAAI,OAAQD,KAAM,SAAUI,SAAU,WAAYL,MAAO,GAC3D,CAAEE,GAAI,OAAQD,KAAM,SAAUI,SAAU,WAAYL,MAAO,GAC3D,CAAEE,GAAI,MAAOD,KAAM,SAAUI,SAAU,WAAYL,MAAO,GAC1D,CAAEE,GAAI,QAASD,KAAM,SAAUI,SAAU,WAAYL,MAAO,GAC5D,CAAEE,GAAI,QAASD,KAAM,SAAUI,SAAU,WAAYL,MAAO,GAC5D,CAAEE,GAAI,OAAQD,KAAM,SAAUI,SAAU,WAAYL,MAAO,GAC3D,CAAEE,GAAI,SAAUD,KAAM,YAAaI,SAAU,cAAeL,MAAO,GACnE,CACEE,GAAI,WACJD,KAAM,YACNI,SAAU,cACVL,MAAO,GAET,CAAEE,GAAI,SAAUD,KAAM,YAAaI,SAAU,cAAeL,MAAO,GACnE,CAAEE,GAAI,MAAOD,KAAM,YAAaI,SAAU,cAAeL,MAAO,GAChE,CACEE,GAAI,WACJD,KAAM,YACNI,SAAU,cACVL,MAAO,GAET,CAAEE,GAAI,UAAWD,KAAM,WAAYI,SAAU,WAAYL,MAAO,KAChE,CAAEE,GAAI,QAASD,KAAM,WAAYI,SAAU,aAAcL,MAAO,OAlCnDyB,mFA2HjB0C,SAASC,iBAAiB,QAAS/E,KAAKwE,gEAGxCM,SAASE,oBAAoB,QAAShF,KAAKwE,kDAoE3C,OACEvE,EAAAC,EAAAC,cAAA,OAAKW,UAAU,qBAAqBmE,IAAKjF,KAAKyE,qBAC3CzE,KAAKkE,gBACNjE,EAAAC,EAAAC,cAAC+E,EAAD,KAAgBlF,KAAKF,MAAMgD,SAC3B7C,EAAAC,EAAAC,cAACgF,EAAD,KACGnF,KAAK8D,mBACLxC,EAAgBtB,KAAKF,MAAMgD,QAAU,YAzMvB5B,aChDVkE,mLARX,OACEnF,EAAAC,EAAAC,cAAA,OAAKW,UAAU,oBACbb,EAAAC,EAAAC,cAACkF,EAAD,cAJUnE,aCOEoE,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO3F,EAAAC,EAAAC,cAAC0F,EAAD,MAASf,SAASgB,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.2c8410d4.chunk.js","sourcesContent":["import React, { Component } from \"react\";\n\nclass Button extends Component {\n  state = {};\n  render() {\n    return (\n      <button\n        tabIndex=\"-1\"\n        onClick={event => {\n          event.currentTarget.blur();\n          this.props.handler(this.props.value, this.props.type);\n        }}\n        id={this.props.id}\n        className={`btn ${this.props.subClass} button`}\n      >\n        {this.props.children}\n      </button>\n    );\n  }\n}\n\nexport default Button;\n","import React, { Component } from \"react\";\n\nclass ResultDisplay extends Component {\n  state = {};\n  render() {\n    return (\n      <div className=\"alert alert-info\" id=\"display\">\n        {this.props.children}\n      </div>\n    );\n  }\n}\n\nexport default ResultDisplay;\n","import React, { Component } from \"react\";\n\nclass OperationsDisplay extends Component {\n  state = {};\n  render() {\n    return (\n      <div id=\"displayOperations\" className=\"alert alert-success\">\n        {this.props.children}\n      </div>\n    );\n  }\n}\n\nexport default OperationsDisplay;\n","import React, { Component } from \"react\";\nimport Button from \"./calculator/button\";\nimport ResultDisplay from \"./calculator/resultDisplay\";\nimport OperationsDisplay from \"./calculator/operationsDisplay\";\n\nlet operationString = [\n  \"\", // 0\n  \"*\", // 1\n  \"/\", // 2\n  \"+\", // 3\n  \"-\", // 4\n  \"=\" // 5\n];\nlet showingResult = false;\n\nfunction cycleOperation(list, operations) {\n  let i = 0;\n  while (i <= list.length - 1) {\n    if (operations.indexOf(list[i].operation) >= 0) {\n      list[i + 1] = calculate(list[i], list[i + 1]);\n      list.splice(i, 1);\n    } else {\n      i++;\n    }\n  }\n  return list;\n}\n\nfunction calculateList(listOrigin) {\n  let list = [...listOrigin];\n  list = cycleOperation(list, [1]); // do multiplication\n  list = cycleOperation(list, [2]); // do division\n  list = cycleOperation(list, [3, 4]); // do addition and subtraction\n  return list[0].operand;\n}\n\nfunction calculate(element, nextElement) {\n  switch (element.operation) {\n    case 1:\n      return {\n        operand: element.operand * nextElement.operand,\n        operation: nextElement.operation\n      };\n    case 2:\n      return {\n        operand: element.operand / nextElement.operand,\n        operation: nextElement.operation\n      };\n    case 3:\n      return {\n        operand: element.operand + nextElement.operand,\n        operation: nextElement.operation\n      };\n    case 4:\n      return {\n        operand: element.operand - nextElement.operand,\n        operation: nextElement.operation\n      };\n    default:\n      return 0;\n  }\n}\n\nclass Calculator extends Component {\n  constructor(props) {\n    super(props);\n    this.calculatorReference = React.createRef();\n    this.state = {\n      display: \"0\",\n      hadDecimal: false,\n      operations: [],\n      buttons: [\n        { id: \"zero\", type: \"number\", subClass: \"btn-info\", value: 0 },\n        { id: \"one\", type: \"number\", subClass: \"btn-info\", value: 1 },\n        { id: \"two\", type: \"number\", subClass: \"btn-info\", value: 2 },\n        { id: \"three\", type: \"number\", subClass: \"btn-info\", value: 3 },\n        { id: \"four\", type: \"number\", subClass: \"btn-info\", value: 4 },\n        { id: \"five\", type: \"number\", subClass: \"btn-info\", value: 5 },\n        { id: \"six\", type: \"number\", subClass: \"btn-info\", value: 6 },\n        { id: \"seven\", type: \"number\", subClass: \"btn-info\", value: 7 },\n        { id: \"eight\", type: \"number\", subClass: \"btn-info\", value: 8 },\n        { id: \"nine\", type: \"number\", subClass: \"btn-info\", value: 9 },\n        { id: \"equals\", type: \"operation\", subClass: \"btn-primary\", value: 5 },\n        {\n          id: \"multiply\",\n          type: \"operation\",\n          subClass: \"btn-primary\",\n          value: 1\n        },\n        { id: \"divide\", type: \"operation\", subClass: \"btn-primary\", value: 2 },\n        { id: \"add\", type: \"operation\", subClass: \"btn-primary\", value: 3 },\n        {\n          id: \"subtract\",\n          type: \"operation\",\n          subClass: \"btn-primary\",\n          value: 4\n        },\n        { id: \"decimal\", type: \"function\", subClass: \"btn-info\", value: \".\" },\n        { id: \"clear\", type: \"function\", subClass: \"btn-danger\", value: \"C\" }\n      ]\n    };\n  }\n\n  addOperation = operation => {\n    let newOpers = this.state.operations;\n    let newNum = parseFloat(this.state.display);\n    if (Number.isNaN(newNum)) {\n      newOpers[newOpers.length - 1].operation = operation;\n    } else {\n      newOpers.push({\n        operand: newNum,\n        operation: operation\n      });\n    }\n    this.setState({\n      operations: newOpers,\n      display: operationString[operation],\n      hadDecimal: false\n    });\n  };\n\n  clearEverything = () => {\n    this.setState({\n      display: \"0\",\n      operations: [],\n      hadDecimal: false\n    });\n    showingResult = false;\n  };\n\n  addToDisplay = value => {\n    let newDisplay = this.state.display + value;\n    newDisplay = newDisplay.replace(/^[/*+\\-=]+/, \"\");\n    if (newDisplay[0] === \".\") newDisplay = \"0.\";\n    newDisplay = newDisplay.replace(/^(0)([^.])/, \"$2\");\n    this.setState({\n      display: newDisplay\n    });\n  };\n\n  showResult = result => {\n    this.setState({\n      display: result,\n      hadDecimal: false\n    });\n    showingResult = true;\n  };\n\n  buttonPressed = (value, type) => {\n    if (showingResult) {\n      showingResult = false;\n      let newDisplay = type === \"operation\" ? this.state.display : \"0\";\n      this.setState(\n        {\n          display: newDisplay,\n          operations: [],\n          hadDecimal: false\n        },\n        () => this.buttonPressed(value, type)\n      );\n    } else {\n      switch (type) {\n        case \"function\":\n          if (value === \"C\") this.clearEverything();\n          else if (!this.state.hadDecimal && value === \".\") {\n            this.addToDisplay(\".\");\n            this.setState({\n              hadDecimal: true\n            });\n          }\n          break;\n        case \"operation\":\n          if (value === 5) {\n            this.addOperation(5);\n            this.showResult(calculateList(this.state.operations));\n          } else this.addOperation(value);\n          break;\n        case \"number\":\n          this.addToDisplay(value);\n          break;\n        default:\n          break;\n      }\n    }\n  };\n\n  componentDidMount() {\n    document.addEventListener(\"keyup\", this.keyPressHandler);\n  }\n  componentWillUnmount() {\n    document.removeEventListener(\"keyup\", this.keyPressHandler);\n  }\n\n  renderOperations = () => {\n    return this.state.operations.reduce((prev, curr) => {\n      return prev + curr.operand + ` ${operationString[curr.operation]} `;\n    }, \"\");\n  };\n\n  renderButtons = () => {\n    return this.state.buttons.map(e => (\n      <Button\n        type={e.type}\n        handler={this.buttonPressed}\n        id={e.id}\n        subClass={e.subClass}\n        key={e.id}\n        value={e.value}\n      >\n        {e.type === \"operation\" ? operationString[e.value] : e.value}\n      </Button>\n    ));\n  };\n\n  keyPressHandler = e => {\n    this.calculatorReference.current.focus();\n    switch (e.key) {\n      case \"0\":\n      case \"1\":\n      case \"2\":\n      case \"3\":\n      case \"4\":\n      case \"5\":\n      case \"6\":\n      case \"7\":\n      case \"8\":\n      case \"9\":\n        this.buttonPressed(Number(e.key), \"number\");\n        break;\n      case \".\":\n        this.buttonPressed(e.key, \"function\");\n        break;\n      case \"C\":\n      case \"c\":\n        this.buttonPressed(\"C\", \"function\");\n        break;\n      case \"Enter\":\n      case \"=\":\n        this.buttonPressed(5, \"operation\");\n        break;\n      case \"-\":\n        this.buttonPressed(4, \"operation\");\n        break;\n      case \"+\":\n        this.buttonPressed(3, \"operation\");\n        break;\n      case \"/\":\n        this.buttonPressed(2, \"operation\");\n        break;\n      case \"*\":\n        this.buttonPressed(1, \"operation\");\n        break;\n      default:\n        break;\n    }\n  };\n\n  render() {\n    return (\n      <div className=\"calculator bg-dark\" ref={this.calculatorReference}>\n        {this.renderButtons()}\n        <ResultDisplay>{this.state.display}</ResultDisplay>\n        <OperationsDisplay>\n          {this.renderOperations()}\n          {showingResult ? this.state.display : \"\"}\n        </OperationsDisplay>\n      </div>\n    );\n  }\n}\n\nexport default Calculator;\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport Calculator from \"./components/calculator\";\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App bg-secondary\">\n        <Calculator />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}